clear
3+2
3*3
clear()
demo()
3+2
3+2
3+2
3+2
3+2
5-2
3+2
5-2
5-2
5-2
5-2
5-2
5-2
5-2
5-2
5-2
5-2
5-2
3+2
3+2
3+2
3+2
3+2
3+2
3+2
3+2
3+2
3+2
3+2
3+2
3+2
3+2
5-2 5/2
# test
3+2
# test
3+2
# Simple Arithmentic problems in R
5-2
# Simple Arithmentic problems in R
5-2 # test
# Simple Arithmentic problems in R
5-2 # test
# Simple Arithmentic problems in R
5-2 # Answer: [1]3
# Simple Arithmentic problems in R
5-2 # Answer: [1] 3
5/2 # Answer: [1] 2.5
2^3 # Answer: [1] 8
3^2 # Answer: [1] 9
9*7 # Answer: [1] 63
9*6+1 # Answer: [1] 55
9*(6+1) # Answer: [1] 63
plotFun(3*x - 2 ~ x, x.lim=range(0,10) )
require(mosaic)
install.packages("mosaic")
3+2
require(mosaic)
plotFun(3*x - 2 ~ x, x.lim=range(0,10) )
sqrt(9) # Answer: [1] 3
sqrt(9) # Answer: [1] 3
sqrt(9) # Answer: [1] 3
# For function with letter names, for instance cos and ln, you put the input to the function between parentheses.
sqrt(9) # Answer: [1] 3
cos(1) # Answer: [1] 0.5403
acos(0) # Answer: [1] 1.571
sin(pi) # Answer: [1] 1.225e-16
log(10) # Answer: [1] 2.303
exp(-3) # Answer: [1] 0.04979
# This is how to store the results from a calculation into a name.
# Such storage is called assignment and it is accomplished with the = operator
first = 3
second = 4
first
second
# This is how to store the results from a calculation into a name.
# Such storage is called assignment and it is accomplished with the = operator
first = 3
first
# This is how to store the results from a calculation into a name.
# Such storage is called assignment and it is accomplished with the = operator
first
# This is how to store the results from a calculation into a name.
# Such storage is called assignment and it is accomplished with the = operator
first
first
second = 4
# This is how to store the results from a calculation into a name.
# Such storage is called assignment and it is accomplished with the = operator
first
first
first = 45
# This is how to store the results from a calculation into a name.
# Such storage is called assignment and it is accomplished with the = operator
first
third
first
hypot
second = 4
hypot = sqrt(first^2 + second^2)
myangle = asin(second/hypot)
hypot*cos(myangle)
hypot
# This is how to store the results from a calculation into a name.
# Such storage is called assignment and it is accomplished with the = operator
first = 3
second = 4
hypot = sqrt(first^2 + second^2)
myangle = asin(second/hypot)
hypot*cos(myangle)
hypot
# Three Variable: a,b,c
a # variable a is not initalized so there will be an Error
a = 1
b = 2
a + b = c
b = 2
c = a + b
c = a + b
# c = 3 currently
c = 100
c = a + b
a + b = c
# Three Variable: a,b,c
a # variable a is not initalized so there will be an Error
a = 1
b = 2
c = a + b
# c = 3 currently
c = 100
# c = 100 now
c
a + b = c
# After running assignment.R and assignments.R
# The following variable are initialized: first, second, hypot, myangle, a, b, c
# When you want to see the value of a named value, just type the name as a command.
first
second
hypot
myangle
a
b
c
a
# This is how to store the results from a calculation into a name.
# Such storage is called assignment and it is accomplished with the = operator
first = 3
second = 4
hypot = sqrt(first^2 + second^2)
myangle = asin(second/hypot)
hypot*cos(myangle)
# Three Variable: a,b,c
a # variable a is not initalized so there will be an Error
a = 1
b = 2
c = a + b
# c = 3 currently
c = 100
# c = 100 now
c
# After running assignment.R and assignments.R
# The following variable are initialized: first, second, hypot, myangle, a, b, c
# When you want to see the value of a named value, just type the name as a command.
first # Answer: [1] 3
second # Answer: [1] 4
hypot # Answer: [1] 5
myangle # Answer: [1] 0.9272952
a # Answer: [1] 1
b # Answer: [1] 2
source(''hello.R'')
source("hello.R"")
hello2 <- function(n)
{
.C("hello", as.integer(n))
}
dyn.load("hello.so")
cd ..
dyn.load("hello.so")
dyn.load("hello.so")
dyn.load("hello.so")
setwd("C:/Users/thinkpad_User/Desktop/N_DRIVE/github/exercises/languages/r/calling_c_with_r")
dyn.load("hello.so")
